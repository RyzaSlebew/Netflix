from prettytable import PrettyTable
from queue import Queue
import mysql.connector
import pymysql
import math,os, time

class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def append(self, data):
        new_node = Node(data)

        if self.head is None:
            self.head = new_node
            return

        current_node = self.head
        while current_node.next:
            current_node = current_node.next

        current_node.next = new_node

    def __len__(self):
        current_node = self.head
        count = 0

        while current_node:
            count += 1
            current_node = current_node.next

        return count

    def __getitem__(self, index):
        if index < 0 or index >= len(self):
            raise IndexError("Index out of range")

        current_node = self.head
        count = 0

        while current_node:
            if count == index:
                return current_node.data
            count += 1
            current_node = current_node.next

def databaseakun():
    try:
        mydb = None
        mydb = mysql.connector.connect(
        host="db4free.net",
        user="kelompok4",
        password="raihan123",
        database="netflix4"
        )
        print("Database Terhubung")
    except mysql.connector.Error as z:
        print(f"Erorr: {z}")
    return mydb

def login():
    while True:
        userakun = input("Masukkan username: ")
        passakun = input("Masukkan password: ")

        # Query untuk login akun VIP
        queryvip = "SELECT * FROM akun WHERE user = %s AND pass = %s"
        valuevip = (userakun, passakun)
        cursor = mydb.cursor()
        cursor.execute(queryvip, valuevip)
        resultvip = cursor.fetchone()

        # Query untuk login akun biasa
        querybiasa = "SELECT * FROM biasa WHERE user = %s AND pass = %s"
        valuebiasa = (userakun, passakun)
        cursor = mydb.cursor()
        cursor.execute(querybiasa, valuebiasa)
        resultbiasa = cursor.fetchone()

        # Pengecekan hasil query dan tampilan pesan
        if resultvip:
            print("Login VIP berhasil")
            time.sleep(2)
            menu()
            break
        elif resultbiasa:
            print("Login biasa berhasil")
            time.sleep(2)
            menu3()
            break
        else:
            print("Login gagal")
            time.sleep(2)
            menu2()

def merge_sort(arr, key=lambda x: x):
    if len(arr) > 1:
        mid = len(arr) // 2
        left_half = arr[:mid]
        right_half = arr[mid:]

        merge_sort(left_half, key=key)
        merge_sort(right_half, key=key)

        i = j = k = 0

        while i < len(left_half) and j < len(right_half):
            if key(left_half[i]) < key(right_half[j]):
                arr[k] = left_half[i]
                i += 1
            else:
                arr[k] = right_half[j]
                j += 1
            k += 1

        while i < len(left_half):
            arr[k] = left_half[i]
            i += 1
            k += 1

        while j < len(right_half):
            arr[k] = right_half[j]
            j += 1
            k += 1

    return arr

def filmvip():
    cursor = mydb.cursor()
    cursor.execute("SELECT COUNT(*) FROM filmvip")
    total_rows = cursor.fetchone()[0]

    movies = LinkedList()

    cursor.execute("SELECT * FROM filmvip")
    for row in cursor.fetchall():
        movies.append(row)

    rows_per_page = 5
    total_pages = (total_rows + rows_per_page - 1) // rows_per_page
    
    page = 1
    while True:
        offset = (page - 1) * rows_per_page
        result = []

        for i in range(offset, offset + rows_per_page):
            try:
                result.append(movies[i])
            except IndexError:
                pass

        if result:
            table = PrettyTable()
            table.field_names = ["NO.Film","Judul","Tahun", "Rating"]
            for row in result:
                table.add_row(row)
            print(table)
        else:
            print("Film tidak ada")
        
        print(f"Page {page} of {total_pages}")
        if total_pages == 1:
            break
        
        choice = input("Pilih halaman (1-4), atau tekan 'x' untuk keluar: ")
        if choice == 'x':
            break
        elif choice.isnumeric() and 1 <= int(choice) <= 4:
            page = int(choice)
        else:
            print("Pilihan tidak valid. Silakan coba lagi.")
        
        print("\n")

def filmbiasa():
    def shell_sort(arr):
        n = len(arr)
        gap = n // 2
        while gap > 0:
            for i in range(gap, n):
                temp = arr[i]
                j = i
                while j >= gap and arr[j - gap][0] > temp[0]:
                    arr[j] = arr[j - gap]
                    j -= gap
                arr[j] = temp
            gap //= 2
        return arr

    def jump_search(arr, x):
        n = len(arr)
        step = int(n ** 0.5)
        prev = 0
        while arr[min(step, n)-1][0] < x:
            prev = step
            step += int(n ** 0.5)
            if prev >= n:
                return -1
        while arr[prev][0] < x:
            prev += 1
            if prev == min(step, n):
                return -1
        if arr[prev][0] == int(x):
            return arr[prev]
        return -1

    cursor = mydb.cursor()
    cursor.execute("SELECT * FROM filmbiasa")
    result = cursor.fetchall()

    if result:
        sorted_result = shell_sort(result)
        table = PrettyTable()
        table.field_names = ["NO.Film","Judul","Tahun", "Rating"]
        for row in sorted_result:
            table.add_row(row)
        print(table)

        judul_film = input("Masukkan judul film yang ingin dicari: ")
        query = f"SELECT * FROM filmbiasa WHERE Judul LIKE '%{judul_film}%'"
        cursor.execute(query)
        result = cursor.fetchall()
        if result:
            table = PrettyTable()
            table.field_names = ["NO.Film","Judul","Tahun", "Rating"]
            for row in result:
                table.add_row(row)
            print(table)
        else:
            print(f"Film dengan judul '{judul_film}' tidak ditemukan")
    else:
        print("Tidak dapat mencari film karena tidak ada data")

def nonton_filmvip():
    os.system('cls' if os.name == 'nt' else 'clear') # membersihkan layar

    # Koneksi ke database
    mydb = databaseakun()
    cursor = mydb.cursor()

    # Mengambil data film dari database
    cursor.execute("SELECT * FROM filmvip")
    movies = cursor.fetchall()
    if not movies:
        print("Tidak ada film yang tersedia saat ini.")
        input("Tekan Enter untuk kembali ke menu...")
        return

    # Menampilkan daftar film setelah diurutkan dengan merge sort
    movies = merge_sort(movies)
    table = PrettyTable()
    table.field_names = ["No", "Judul", "Tahun","Rating"]
    for i, movie in enumerate(movies):
        table.add_row([i+1, movie[1], movie[2], movie[3]])
    print(table)

    # Meminta input pilihan film
    choice = input("Pilih film yang ingin ditonton (masukkan nomor): ")
    while not choice.isnumeric() or int(choice) < 1 or int(choice) > len(movies):
        print("Pilihan tidak valid. Silakan coba lagi.")
        choice = input("Pilih film yang ingin ditonton (masukkan nomor): ")
    chosen_movie = movies[int(choice)-1][1]
    
    # Membersihkan layar dan menampilkan pesan
    os.system('cls' if os.name == 'nt' else 'clear') # membersihkan layar
    print(f"Anda sedang menonton {chosen_movie}. Selamat menonton!")
    input("Tekan Enter untuk kembali ke menu...")


def nonton_filmbiasa():
    os.system('cls' if os.name == 'nt' else 'clear') # membersihkan layar

    # Koneksi ke database
    mydb = databaseakun()
    cursor = mydb.cursor()

    # Mengambil data film dari database
    cursor.execute("SELECT * FROM filmbiasa")
    movies = cursor.fetchall()
    if not movies:
        print("Tidak ada film yang tersedia saat ini.")
        input("Tekan Enter untuk kembali ke menu...")
        return

    # Menampilkan daftar film setelah diurutkan dengan merge sort
    movies = merge_sort(movies)
    table = PrettyTable()
    table.field_names = ["No", "Judul", "Tahun","Rating"]
    for i, movie in enumerate(movies):
        table.add_row([i+1, movie[1], movie[2], movie[3]])
    print(table)

    # Meminta input pilihan film
    choice = input("Pilih film yang ingin ditonton (masukkan nomor): ")
    while not choice.isnumeric() or int(choice) < 1 or int(choice) > len(movies):
        print("Pilihan tidak valid. Silakan coba lagi.")
        choice = input("Pilih film yang ingin ditonton (masukkan nomor): ")
    chosen_movie = movies[int(choice)-1][1]
    
    # Membersihkan layar dan menampilkan pesan
    os.system('cls' if os.name == 'nt' else 'clear') # membersihkan layar
    print(f"Anda sedang menonton {chosen_movie}. Selamat menonton!")
    input("Tekan Enter untuk kembali ke menu...")


def menu():
    while True:
        os.system('cls' if os.name == 'nt' else 'clear') # membersihkan layar
        print("Selamat datang di Netflix!")
        print("1. Daftar film")
        print("2. Nonton film")
        print("3. Keluar")
        choice = input("Masukkan pilihan: ")
        if choice == "1":
            filmvip()
            input("Tekan Enter untuk kembali ke menu...")
        elif choice == "2":
            nonton_filmvip()
        elif choice == "3":
            print("Terima kasih telah menggunakan layanan Netflix!")
            break
        else:
            print("Pilihan tidak valid. Silakan coba lagi.")
            input("Tekan Enter untuk kembali ke menu...")
def menu3():
    while True:
        os.system('cls' if os.name == 'nt' else 'clear') # membersihkan layar
        print("Selamat datang di Netflix!")
        print("1. Daftar film")
        print("2. Nonton film")
        print("3. Keluar")
        choice = input("Masukkan pilihan: ")
        if choice == "1":
            filmbiasa()
            input("Tekan Enter untuk kembali ke menu...")
        elif choice == "2":
            nonton_filmbiasa()
        elif choice == "3":
            print("Terima kasih telah menggunakan layanan Netflix!")
            break
        else:
            print("Pilihan tidak valid. Silakan coba lagi.")
            input("Tekan Enter untuk kembali ke menu...")

def menu2():
    while True:
        os.system('cls' if os.name == 'nt' else 'clear') # membersihkan layar
        print("Selamat datang di Netflix!")
        print("1. Login")
        print("2. Keluar")
        choice = input("Masukkan pilihan: ")
        if choice == "1":
           login()
        elif choice == "2":
            print("Terima kasih telah menggunakan layanan Netflix!")
            break
        else:
            print("Pilihan tidak valid. Silakan coba lagi.")
            input("Tekan Enter untuk kembali ke menu...")
            
mydb = databaseakun()

menu2()
